pipeline {
	    agent any
	

	        // Environment Variables
	        environment {
	        MAJOR = '1'
	        MINOR = '0'
	        //Orchestrator Services
	        UIPATH_ORCH_URL = "https://ssuipathorchmultinode.eastus.cloudapp.azure.com/"
	        UIPATH_ORCH_LOGICAL_NAME = "https://ssuipathorchmultinode.eastus.cloudapp.azure.com/"
	        UIPATH_ORCH_TENANT_NAME = "Default"
	        UIPATH_ORCH_FOLDER_NAME = "Shared"
			UIPATH_PACKAGE_PATH = ""
	    }
	

	    stages {
	

	        // Printing Basic Information
	        stage('Preparing'){
	            steps {
	                echo "Jenkins Home ${env.JENKINS_HOME}"
	                echo "Jenkins URL ${env.JENKINS_URL}"
	                echo "Jenkins JOB Number ${env.BUILD_NUMBER}"
	                echo "Jenkins JOB Name ${env.JOB_NAME}"
	                echo "GitHub BranhName ${env.BRANCH_NAME}"
	                checkout scm
	

	            }
	        }
	

	         // Build Stages
	        stage('Build') {
	            steps {
	                echo "Building..with ${WORKSPACE}"
					//powershell '''$files=$(git diff head~ --name-only)
					//echo $files'''
					//UIPATH_PACKAGE_PATH = $files(0)
					//echo UIPATH_PACKAGE_PATH
	            }
	        }
	         // Test Stages
	        stage('Test') {
	            steps {
	                echo 'Testing..the workflow...'
					
	            }
	        }
			
			
			stage('Download Files') {
				steps {
					script {
					echo 'Downloading..Files...'
						def files = sh(script: "git diff --name-only origin/uat..HEAD", returnStdout: true).trim().split('\n')
						for (def file in files) {
							echo file
							//sh "curl -O -L $gitUrl/blob/uat/$file"
						}
					}
				}
			}



	

	         // Deploy Stages
	        stage('Deploy') {
	            steps {
	                echo "Deploying ${BRANCH_NAME}"
	                //UiPathDeploy (
	                //packagePath: "Output\\${env.BUILD_NUMBER}",
	                //orchestratorAddress: "${UIPATH_ORCH_URL}",
	                //orchestratorTenant: "${UIPATH_ORCH_TENANT_NAME}",
	                //folderName: "${UIPATH_ORCH_FOLDER_NAME}",
	                //environments: 'DEV',
	                //credentials: [$class: 'UserPassAuthenticationEntry', credentialsId: 'APIUserKey']
	                //credentials: Token(accountName: "${UIPATH_ORCH_LOGICAL_NAME}", credentialsId: 'ade18b82-5a45-44f6-aa49-cf5083bfde84'), 
					//traceLevel: 'None',
					//entryPointPaths: 'Main.xaml'
	        //)
	            }
	        }
	

	

	         // Deploy to Production Step
	        stage('Deploy to Production') {
	            steps {
	                echo 'Deploy to Production'
	                }
	            }
	    }
	

	    // Options
	    options {
	        // Timeout for pipeline
	        timeout(time:80, unit:'MINUTES')
	        skipDefaultCheckout()
	    }
	

	

	    // 
	    post {
	        success {
	            echo 'Deployment has been completed!'
	        }
	        failure {
	          echo "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.JOB_DISPLAY_URL})"
	        }
	        always {
				echo 'Always Executed!'
	            /* Clean workspace if success */
	            //cleanWs()
	        }
	    }
	

	}
